{"version":3,"sources":["pages/CoinPage/index.tsx"],"names":["connect","state","coinInfo","coinInfoSelector","isFetching","isFetchingSelector","targetCoinCode","targetCoinCodeSelector","error","errorSelector","getCoinInfo","resetCoinInfo","React","memo","match","coinCode","params","code","toUpperCase","useEffect","className","Object","keys","length"],"mappings":"wHAAA,mEA2EeA,uBATE,SAACC,GAChB,MAAO,CACLC,SAAUC,YAAiBF,GAC3BG,WAAYC,YAAmBJ,GAC/BK,eAAgBC,YAAuBN,GACvCO,MAAOC,YAAcR,MAIiD,CACxES,gBACAC,mBAFaX,CAGZY,IAAMC,MAhD0B,SAAC,GAQ7B,IAPLC,EAOI,EAPJA,MACAJ,EAMI,EANJA,YACAC,EAKI,EALJA,cACAP,EAII,EAJJA,WACAF,EAGI,EAHJA,SACAI,EAEI,EAFJA,eACAE,EACI,EADJA,MAGMO,EAAWD,EAAME,OAAOC,KAAKC,cASnC,OAPAC,qBAAU,WAER,OADAT,EAAYK,GACL,WACLJ,OAED,CAACI,EAAUT,IAGZ,6BAASc,UAAU,aACjB,yBAAKA,UAAU,aACZhB,EACG,kBAAC,IAAD,MACA,oCACCiB,OAAOC,KAAKpB,GAAUqB,SAAWf,EAC9B,kBAAC,IAAD,CAAUN,SAAUA,EAAUI,eAAgBA,IAC9C,2BAAIE","file":"static/js/4.d60ee474.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { TCoinCode, TCoinFullInfo } from '../../utils/types'\r\nimport { TRootState } from '../../store'\r\nimport { getCoinInfo, resetCoinInfo } from '../../store/coinInfo/actions'\r\nimport {\r\n  isFetchingSelector,\r\n  coinInfoSelector,\r\n  targetCoinCodeSelector,\r\n  errorSelector,\r\n} from '../../store/coinInfo/selectors'\r\n\r\nimport { Loader } from '../../components'\r\nimport { CoinInfo } from '../../containers'\r\n\r\ntype TMapState = {\r\n  coinInfo: TCoinFullInfo\r\n  isFetching: boolean\r\n  targetCoinCode: TCoinCode\r\n  error: string\r\n}\r\ntype TMapDispatch = {\r\n  getCoinInfo: (coinCode: TCoinCode) => void\r\n  resetCoinInfo: () => void\r\n}\r\n\r\ntype TProps = RouteComponentProps & TMapState & TMapDispatch\r\n\r\nconst CoinPage: React.FC<TProps> = ({\r\n  match,\r\n  getCoinInfo,\r\n  resetCoinInfo,\r\n  isFetching,\r\n  coinInfo,\r\n  targetCoinCode,\r\n  error,\r\n}) => {\r\n  // @ts-ignore\r\n  const coinCode = match.params.code.toUpperCase()\r\n\r\n  useEffect(() => {\r\n    getCoinInfo(coinCode)\r\n    return () => {\r\n      resetCoinInfo()\r\n    }\r\n  }, [coinCode, targetCoinCode]) // eslint-disable-line\r\n\r\n  return (\r\n    <section className='coin-page'>\r\n      <div className='container'>\r\n        {isFetching\r\n          ? <Loader />\r\n          : <>\r\n            {Object.keys(coinInfo).length && !error\r\n              ? <CoinInfo coinInfo={coinInfo} targetCoinCode={targetCoinCode} />\r\n              : <p>{error}</p>\r\n            }\r\n          </>\r\n        }\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nconst mapState = (state: TRootState): TMapState => {\r\n  return {\r\n    coinInfo: coinInfoSelector(state),\r\n    isFetching: isFetchingSelector(state),\r\n    targetCoinCode: targetCoinCodeSelector(state),\r\n    error: errorSelector(state),\r\n  }\r\n}\r\n\r\nexport default connect<TMapState, TMapDispatch, {}, TRootState>(mapState, {\r\n  getCoinInfo,\r\n  resetCoinInfo,\r\n})(React.memo(CoinPage))\r\n"],"sourceRoot":""}